import { CallOverrides } from "ethers";
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */
export declare type PartnersRegistryContractFunctions1 = [] | [PartnersRegistryContractFunctions] | [PartnersRegistryContractFunctions, PartnersRegistryContractEvents];
export declare type SWEvent = {
    event: PartnersRegistryContractEventType;
    args: any;
}[];
export interface PartnersRegistryContractFunctions {
    agreementIds: (overrides?: CallOverrides) => Promise<number>;
    agreements: (overrides?: CallOverrides) => Promise<string>;
    create: (communityAddress: string, rolesCount: number, commitmentLevel: number, partnersContractAddress: string, overrides?: CallOverrides) => Promise<{
        wait: () => Promise<PartnersRegistryContractEvents>;
    }>;
    deployer: (overrides?: CallOverrides) => Promise<string>;
    getPartnerAgreementAddresses: (overrides?: CallOverrides) => Promise<string[]>;
    initialize: (_skillWalletAddress: string, _interactionNFTFactory: string, overrides?: CallOverrides) => Promise<{
        wait: () => Promise<PartnersRegistryContractEvents>;
    }>;
    interactionNFTFactory: (overrides?: CallOverrides) => Promise<string>;
    migrate: (_agreement: string, overrides?: CallOverrides) => Promise<{
        wait: () => Promise<PartnersRegistryContractEvents>;
    }>;
    setVersion: (_version: number, overrides?: CallOverrides) => Promise<{
        wait: () => Promise<PartnersRegistryContractEvents>;
    }>;
    skillWalletAddress: (overrides?: CallOverrides) => Promise<string>;
    version: (overrides?: CallOverrides) => Promise<number>;
}
export interface PartnersRegistryContractEvents {
    events: SWEvent;
}
export declare enum PartnersRegistryContractEventType {
    PartnersAgreementCreated = "PartnersAgreementCreated"
}
